{"ast":null,"code":"import _objectSpread from\"/root/Desktop/front/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/root/Desktop/front/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";export function WinCheck(board,turn){//const turn=props.turn;\n//const board=props.board;\nvar combn=[[0,1,2],[3,4,5],[6,7,8],[0,4,8],[0,3,6],[1,4,7],[2,5,8],[2,4,6]];for(var i=0;i<combn.length;i++){var match=combn[i];if(board[match[0]]===board[match[1]]&&board[match[2]]===board[match[0]]&&board[match[0]]===turn){return true;}}return false;}export function pcMove(board){var possible=[];for(var i=0;i<9;i++){if(board[i]===null){possible.push(i);}}for(var _i=0,_arr=[\"O\",\"X\"];_i<_arr.length;_i++){var plr=_arr[_i];var _iterator=_createForOfIteratorHelper(possible),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var pos=_step.value;var copy=_objectSpread({},board);copy[pos]=plr;if(WinCheck(copy,plr)){return pos;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}var corners=possible.filter(function(x){return[0,2,6,8].includes(x);});var edge=possible.filter(function(x){return[1,3,5,7].includes(x);});//console.log(corners,edge)\nif(corners.length>0)return corners[Math.floor(Math.random()*corners.length)];else if(4 in possible)return 4;else return edge[Math.floor(Math.random()*edge.length)];}","map":{"version":3,"sources":["/root/Desktop/front/portfolio/src/components/fun/calc.js"],"names":["WinCheck","board","turn","combn","i","length","match","pcMove","possible","push","plr","pos","copy","corners","filter","x","includes","edge","Math","floor","random"],"mappings":"+TAAA,MAAO,SAASA,CAAAA,QAAT,CAAkBC,KAAlB,CAAwBC,IAAxB,CAA6B,CAChC;AACA;AACA,GAAMC,CAAAA,KAAK,CAAC,CACJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CADI,CAEJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAFI,CAGJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAHI,CAIJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAJI,CAKJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CALI,CAMJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CANI,CAOJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAPI,CAQJ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CARI,CAAZ,CAUA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACD,KAAK,CAACE,MAApB,CAA2BD,CAAC,EAA5B,CAA+B,CAC3B,GAAIE,CAAAA,KAAK,CAACH,KAAK,CAACC,CAAD,CAAf,CACA,GAAIH,KAAK,CAACK,KAAK,CAAC,CAAD,CAAN,CAAL,GAAkBL,KAAK,CAACK,KAAK,CAAC,CAAD,CAAN,CAAvB,EAAqCL,KAAK,CAACK,KAAK,CAAC,CAAD,CAAN,CAAL,GAAkBL,KAAK,CAACK,KAAK,CAAC,CAAD,CAAN,CAA5D,EAA0EL,KAAK,CAACK,KAAK,CAAC,CAAD,CAAN,CAAL,GAAkBJ,IAAhG,CAAqG,CACjG,MAAO,KAAP,CACH,CACJ,CACD,MAAO,MAAP,CACH,CAED,MAAO,SAASK,CAAAA,MAAT,CAAgBN,KAAhB,CAAsB,CACzB,GAAIO,CAAAA,QAAQ,CAAC,EAAb,CACA,IAAK,GAAIJ,CAAAA,CAAC,CAAC,CAAX,CAAaA,CAAC,CAAC,CAAf,CAAiBA,CAAC,EAAlB,CAAqB,CACjB,GAAIH,KAAK,CAACG,CAAD,CAAL,GAAW,IAAf,CAAoB,CAChBI,QAAQ,CAACC,IAAT,CAAcL,CAAd,EACH,CACJ,CACD,kBAAe,CAAC,GAAD,CAAK,GAAL,CAAf,qBAAyB,CAArB,GAAIM,CAAAA,GAAG,SAAP,CAAqB,yCACLF,QADK,YACrB,+CAAyB,IAAhBG,CAAAA,GAAgB,aACrB,GAAIC,CAAAA,IAAI,kBAAKX,KAAL,CAAR,CACAW,IAAI,CAACD,GAAD,CAAJ,CAAUD,GAAV,CACA,GAAIV,QAAQ,CAACY,IAAD,CAAMF,GAAN,CAAZ,CAAuB,CACnB,MAAOC,CAAAA,GAAP,CACH,CACJ,CAPoB,qDAQxB,CAID,GAAIE,CAAAA,OAAO,CAACL,QAAQ,CAACM,MAAT,CAAgB,SAAAC,CAAC,QAAE,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAAO,CAAP,EAAUC,QAAV,CAAmBD,CAAnB,CAAF,EAAjB,CAAZ,CACA,GAAIE,CAAAA,IAAI,CAACT,QAAQ,CAACM,MAAT,CAAgB,SAAAC,CAAC,QAAE,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAAO,CAAP,EAAUC,QAAV,CAAmBD,CAAnB,CAAF,EAAjB,CAAT,CACD;AACC,GAAIF,OAAO,CAACR,MAAR,CAAe,CAAnB,CACI,MAAOQ,CAAAA,OAAO,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBP,OAAO,CAACR,MAAnC,CAAD,CAAd,CADJ,IAGK,IAAI,IAAKG,CAAAA,QAAT,CACD,MAAO,EAAP,CADC,IAGD,OAAOS,CAAAA,IAAI,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBH,IAAI,CAACZ,MAAhC,CAAD,CAAX,CAGP","sourcesContent":["export function WinCheck(board,turn){\n    //const turn=props.turn;\n    //const board=props.board;\n    const combn=[\n            [0,1,2],\n            [3,4,5],\n            [6,7,8],\n            [0,4,8],\n            [0,3,6],\n            [1,4,7],\n            [2,5,8],\n            [2,4,6]\n            ];\n    for(let i=0;i<combn.length;i++){\n        let match=combn[i];\n        if (board[match[0]]===board[match[1]] && board[match[2]]===board[match[0]] && board[match[0]]===turn){\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function pcMove(board){\n    let possible=[];\n    for (let i=0;i<9;i++){\n        if (board[i]===null){\n            possible.push(i);\n        }\n    }\n    for(let plr of [\"O\",\"X\"]){\n        for (let pos of possible){\n            let copy={...board};\n            copy[pos]=plr;\n            if (WinCheck(copy,plr)){\n                return pos;\n            }          \n        }\n    }\n    \n\n\n    let corners=possible.filter(x=>[0,2,6,8].includes(x));\n    let edge=possible.filter(x=>[1,3,5,7].includes(x));\n   //console.log(corners,edge)\n    if (corners.length>0)\n        return corners[Math.floor(Math.random() * corners.length)]\n\n    else if (4 in possible)\n        return 4\n    else \n        return edge[Math.floor(Math.random() * edge.length)]\n\n    \n}"]},"metadata":{},"sourceType":"module"}